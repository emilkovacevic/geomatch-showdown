generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum MemberRole {
  ADMIN
  MODERATOR
  USER
}

model User {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  role           MemberRole   @default(USER)
  image          String       @default("/person.jpg")
  score          Float        @default(0)
  email          String       @unique
  emailVerified  Boolean?
  hashedPassword String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  scoreList      ScoreEntry[]
  sessions       Session[]
  accounts       Account[]
}

model ScoreEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  score     Float
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [id], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
